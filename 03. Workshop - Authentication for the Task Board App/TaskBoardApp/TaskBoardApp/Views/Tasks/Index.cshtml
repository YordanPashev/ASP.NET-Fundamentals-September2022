@model TaskViewModel[]

@{
    ViewData["Title"] = "All Tasks";
}
<div class="text-center">
    <h1 class="display-4" style="color: #EFCFC3; font-weight: bold; font-style: italic">
        @ViewData["Title"]
    </h1>
    @if(Model == null || Model.Count() <= 0)
    {
        <h2 style="color: black; font-weight: bold">
            There is no tasks.
        </h2>
    }
    else
    {
        <table class="table table-hover" style="color: whitesmoke; text-align: center; backdrop-filter: blur(15px); border: 2px solid; border-color: #EFCFC3; border-radius: 35px">
            <thead>
                <tr>
                    <th style="text-align:center">Title</th>
                    <th></th>
                    <th style="text-align:end">Status</th>
                    <th style="text-align:end">Description</th>
                    <th style="text-align:end">Created on</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in @Model)
                {
                    <tr name="trData" onclick="location.href='@Url.Action("Details", "Tasks", new { task.Id })'">
                        <td>@Html.DisplayFor(modelItem => task.Title)</td>
                        <td style="text-align:end">@Html.DisplayFor(modelItem => task.BoardName)</td>
                        <td style="text-align:end">@Html.DisplayFor(modelItem => task.Description)</td>
                        <td style="text-align:end">@Html.DisplayFor(modelItem => task.CreatedOn)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <div>
        <a class="btn btn-success mt-2" asp-controller="Tasks" asp-action="Create">Create new task</a>
    </div>
</div>


